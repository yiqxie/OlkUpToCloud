//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.17929.
// 
namespace FileToUpload
{
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MgmOBSServiceSoap", Namespace="http://pingan.com")]
    public partial class MgmOBSService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback RequestProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback RequestUploadFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUploadStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileDownloadPageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SmartHostGetFileDownloadURLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileInfoOperationCompleted;
        
        /// <remarks/>
        public MgmOBSService() {
            this.Url = "http://localhost:58943/MgmOBSService.asmx";
        }
        
        /// <remarks/>
        public event RequestProfileCompletedEventHandler RequestProfileCompleted;
        
        /// <remarks/>
        public event RequestUploadFileCompletedEventHandler RequestUploadFileCompleted;
        
        /// <remarks/>
        public event UpdateUploadStatusCompletedEventHandler UpdateUploadStatusCompleted;
        
        /// <remarks/>
        public event GetFileDownloadPageCompletedEventHandler GetFileDownloadPageCompleted;
        
        /// <remarks/>
        public event SmartHostGetFileDownloadURLCompletedEventHandler SmartHostGetFileDownloadURLCompleted;
        
        /// <remarks/>
        public event GetFileInfoCompletedEventHandler GetFileInfoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pingan.com/RequestProfile", RequestNamespace="http://pingan.com", ResponseNamespace="http://pingan.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RequestProfile() {
            object[] results = this.Invoke("RequestProfile", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRequestProfile(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RequestProfile", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndRequestProfile(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RequestProfileAsync() {
            this.RequestProfileAsync(null);
        }
        
        /// <remarks/>
        public void RequestProfileAsync(object userState) {
            if ((this.RequestProfileOperationCompleted == null)) {
                this.RequestProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequestProfileOperationCompleted);
            }
            this.InvokeAsync("RequestProfile", new object[0], this.RequestProfileOperationCompleted, userState);
        }
        
        private void OnRequestProfileOperationCompleted(object arg) {
            if ((this.RequestProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequestProfileCompleted(this, new RequestProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pingan.com/RequestUploadFile", RequestNamespace="http://pingan.com", ResponseNamespace="http://pingan.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RequestUploadFile(System.Xml.XmlNode xmlDoc) {
            object[] results = this.Invoke("RequestUploadFile", new object[] {
                        xmlDoc});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRequestUploadFile(System.Xml.XmlNode xmlDoc, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RequestUploadFile", new object[] {
                        xmlDoc}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndRequestUploadFile(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RequestUploadFileAsync(System.Xml.XmlNode xmlDoc) {
            this.RequestUploadFileAsync(xmlDoc, null);
        }
        
        /// <remarks/>
        public void RequestUploadFileAsync(System.Xml.XmlNode xmlDoc, object userState) {
            if ((this.RequestUploadFileOperationCompleted == null)) {
                this.RequestUploadFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequestUploadFileOperationCompleted);
            }
            this.InvokeAsync("RequestUploadFile", new object[] {
                        xmlDoc}, this.RequestUploadFileOperationCompleted, userState);
        }
        
        private void OnRequestUploadFileOperationCompleted(object arg) {
            if ((this.RequestUploadFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequestUploadFileCompleted(this, new RequestUploadFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pingan.com/UpdateUploadStatus", RequestNamespace="http://pingan.com", ResponseNamespace="http://pingan.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateUploadStatus(System.Xml.XmlNode XmlDoc) {
            object[] results = this.Invoke("UpdateUploadStatus", new object[] {
                        XmlDoc});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateUploadStatus(System.Xml.XmlNode XmlDoc, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateUploadStatus", new object[] {
                        XmlDoc}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndUpdateUploadStatus(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUploadStatusAsync(System.Xml.XmlNode XmlDoc) {
            this.UpdateUploadStatusAsync(XmlDoc, null);
        }
        
        /// <remarks/>
        public void UpdateUploadStatusAsync(System.Xml.XmlNode XmlDoc, object userState) {
            if ((this.UpdateUploadStatusOperationCompleted == null)) {
                this.UpdateUploadStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUploadStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateUploadStatus", new object[] {
                        XmlDoc}, this.UpdateUploadStatusOperationCompleted, userState);
        }
        
        private void OnUpdateUploadStatusOperationCompleted(object arg) {
            if ((this.UpdateUploadStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUploadStatusCompleted(this, new UpdateUploadStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pingan.com/GetFileDownloadPage", RequestNamespace="http://pingan.com", ResponseNamespace="http://pingan.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetFileDownloadPage(string fileKey) {
            object[] results = this.Invoke("GetFileDownloadPage", new object[] {
                        fileKey});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFileDownloadPage(string fileKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFileDownloadPage", new object[] {
                        fileKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndGetFileDownloadPage(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileDownloadPageAsync(string fileKey) {
            this.GetFileDownloadPageAsync(fileKey, null);
        }
        
        /// <remarks/>
        public void GetFileDownloadPageAsync(string fileKey, object userState) {
            if ((this.GetFileDownloadPageOperationCompleted == null)) {
                this.GetFileDownloadPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileDownloadPageOperationCompleted);
            }
            this.InvokeAsync("GetFileDownloadPage", new object[] {
                        fileKey}, this.GetFileDownloadPageOperationCompleted, userState);
        }
        
        private void OnGetFileDownloadPageOperationCompleted(object arg) {
            if ((this.GetFileDownloadPageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileDownloadPageCompleted(this, new GetFileDownloadPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pingan.com/SmartHostGetFileDownloadURL", RequestNamespace="http://pingan.com", ResponseNamespace="http://pingan.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SmartHostGetFileDownloadURL(string fileKey) {
            object[] results = this.Invoke("SmartHostGetFileDownloadURL", new object[] {
                        fileKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSmartHostGetFileDownloadURL(string fileKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SmartHostGetFileDownloadURL", new object[] {
                        fileKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndSmartHostGetFileDownloadURL(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SmartHostGetFileDownloadURLAsync(string fileKey) {
            this.SmartHostGetFileDownloadURLAsync(fileKey, null);
        }
        
        /// <remarks/>
        public void SmartHostGetFileDownloadURLAsync(string fileKey, object userState) {
            if ((this.SmartHostGetFileDownloadURLOperationCompleted == null)) {
                this.SmartHostGetFileDownloadURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSmartHostGetFileDownloadURLOperationCompleted);
            }
            this.InvokeAsync("SmartHostGetFileDownloadURL", new object[] {
                        fileKey}, this.SmartHostGetFileDownloadURLOperationCompleted, userState);
        }
        
        private void OnSmartHostGetFileDownloadURLOperationCompleted(object arg) {
            if ((this.SmartHostGetFileDownloadURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SmartHostGetFileDownloadURLCompleted(this, new SmartHostGetFileDownloadURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://pingan.com/GetFileInfo", RequestNamespace="http://pingan.com", ResponseNamespace="http://pingan.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetFileInfo(string fileKey) {
            object[] results = this.Invoke("GetFileInfo", new object[] {
                        fileKey});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFileInfo(string fileKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFileInfo", new object[] {
                        fileKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndGetFileInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileInfoAsync(string fileKey) {
            this.GetFileInfoAsync(fileKey, null);
        }
        
        /// <remarks/>
        public void GetFileInfoAsync(string fileKey, object userState) {
            if ((this.GetFileInfoOperationCompleted == null)) {
                this.GetFileInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileInfoOperationCompleted);
            }
            this.InvokeAsync("GetFileInfo", new object[] {
                        fileKey}, this.GetFileInfoOperationCompleted, userState);
        }
        
        private void OnGetFileInfoOperationCompleted(object arg) {
            if ((this.GetFileInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileInfoCompleted(this, new GetFileInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    public delegate void RequestProfileCompletedEventHandler(object sender, RequestProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequestProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequestProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    public delegate void RequestUploadFileCompletedEventHandler(object sender, RequestUploadFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequestUploadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequestUploadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    public delegate void UpdateUploadStatusCompletedEventHandler(object sender, UpdateUploadStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUploadStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUploadStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    public delegate void GetFileDownloadPageCompletedEventHandler(object sender, GetFileDownloadPageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileDownloadPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileDownloadPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    public delegate void SmartHostGetFileDownloadURLCompletedEventHandler(object sender, SmartHostGetFileDownloadURLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SmartHostGetFileDownloadURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SmartHostGetFileDownloadURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    public delegate void GetFileInfoCompletedEventHandler(object sender, GetFileInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
}
